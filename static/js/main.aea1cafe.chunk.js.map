{"version":3,"sources":["Landing.js","floan/CreateLoan.js","floan/Home.js","floan/OpenLoanList.js","floan/RequesterInfo.js","floan/RequesterLoanList.js","helpers/theGraph.js","floan/FLoan.js","App.js","index.js"],"names":["Landing","connectWallet","className","Button","variant","onClick","CreateLoan","state","principal","repayment","duration","prepCreateLoanOffer","utils","parseEther","parseInt","props","createLoanOffer","color","this","goToHomeView","TextField","value","onChange","e","setState","target","label","fullWidth","React","PureComponent","Home","signerAddress","goToCreateLoanView","goToListLoansView","goToRequesterProvidedLoansView","goToRequesterDrawnLoansView","OpenLoanList","goToRequesterInfoView","fundLoan","rows","openLoans","map","loan","etherToFixed","number","formatted","formatEther","parseFloat","toString","toFixed","TableRow","TableCell","id","request","requester","seconds","days","Number","replace","formatDays","TableContainer","Table","aria-label","TableHead","TableBody","RequesterInfo","requesterInfo","amountOutstanding","amountRepayed","amountRequested","amountOverdue","href","RequesterLoanList","action","requesterLoans","title","getLoans","a","axios","post","query","data","loans","provision","expires","timestamp","is_expired","Date","now","getRequesterInfo","requesterId","info","VIEWS","FLoan","floanContract","daiContract","activeView","componentDidMount","ethers","Contract","process","floanAbi","signer","getTokenAddress","daiAddress","erc20Abi","console","log","requestLoan","transaction","alert","loanId","loadPrincipal","approve","v","provideLoan","w","drawLoan","paybackLoan","filter","toLowerCase","App","provider","providers","Web3Provider","window","ethereum","_isMetaMaskAccountConnected","getSigner","getAddress","listAccounts","accounts","length","send","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea1cafe.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport './Landing.css';\n\n\nexport default function Landing({ connectWallet }) {\n    return (\n        <div className=\"Landing__container\">\n            <div>\n                <section>\n                    <h1>fLoan: uncolleteralized loans made real</h1>\n                </section>\n                <div className=\"Landing__connectButton\">\n                    <Button variant=\"outlined\" onClick={connectWallet}>Connect wallet</Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { utils } from \"ethers\";\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport './CreateLoan.css';\n\n\nexport default class CreateLoan extends React.PureComponent {\n\n    state = {\n        principal: '',\n        repayment: '',\n        duration: '',\n    };\n\n    prepCreateLoanOffer = () => {\n        const principal = utils.parseEther(this.state.principal);\n        const repayment = utils.parseEther(this.state.repayment);\n        const duration = parseInt(this.state.duration, 10) * 24 * 60 * 60;\n\n        this.props.createLoanOffer(principal, repayment, duration);\n    }\n\n    render() {\n        return (\n            <div className=\"CreateLoan__container\">\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.props.goToHomeView}>Home</Button>\n                    <h2 className=\"CreateLoan__title\">Create loan offer</h2>\n                    <div className=\"CreateLoan__input\">\n                        <TextField\n                            value={this.state.principal}\n                            onChange={(e) => this.setState({ principal: e.target.value })}\n                            label=\"Principal\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </div>\n                    <div className=\"CreateLoan__input\">\n                        <TextField\n                            value={this.state.repayment}\n                            onChange={(e) => this.setState({ repayment: e.target.value })}\n                            label=\"Repayment (prin + interest)\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </div>\n                    <div className=\"CreateLoan__input\">\n                        <TextField\n                            value={this.state.duration}\n                            onChange={(e) => this.setState({ duration: e.target.value })}\n                            label=\"Duration (days)\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </div>\n\n                    <div className=\"CreateLoan__button\">\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.prepCreateLoanOffer}>Create</Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateLoan.propTypes = {\n    goToHomeView: PropTypes.func.isRequired,\n    createLoanOffer: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport './Home.css';\n\n\nexport default function Home({ signerAddress, goToCreateLoanView, goToListLoansView, goToRequesterProvidedLoansView, goToRequesterDrawnLoansView }) {\n    return (\n        <div className=\"Home__container\">\n            <div>\n                <div><h3>You are logged-in as {signerAddress}</h3></div>\n\n                <div className=\"Home__button\"><Button variant=\"outlined\" onClick={goToCreateLoanView}>Create loan request</Button></div>\n                <div className=\"Home__button\"><Button variant=\"outlined\" onClick={goToListLoansView}>View open loans</Button></div>\n                <div className=\"Home__button\"><Button variant=\"outlined\" onClick={goToRequesterProvidedLoansView}>Draw funds from provided loans</Button></div>\n                <div className=\"Home__button\"><Button variant=\"outlined\" onClick={goToRequesterDrawnLoansView}>Pay back your loans</Button></div>\n            </div>\n        </div>\n    );\n}\n\nHome.propTypes = {\n    goToCreateLoanView: PropTypes.func.isRequired,\n    goToListLoansView: PropTypes.func.isRequired,\n    signerAddress: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { utils } from \"ethers\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport PaymentIcon from \"@material-ui/icons/Payment\";\n\nimport \"./Table.css\";\n\nexport default function OpenLoanList({\n    goToHomeView,\n    goToRequesterInfoView,\n    fundLoan,\n    openLoans,\n}) {\n    const rows = openLoans.map((loan) => {\n        const etherToFixed = (number) => {\n            const formatted = utils.formatEther(number);\n            return parseFloat(formatted.toString()).toFixed(2);\n        };\n        const formatDays = (seconds) => {\n            const days = parseInt(seconds, 10) / 60 / 60 / 24;\n            return Number(days)\n                .toFixed(2)\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        };\n\n        return (\n            <TableRow key={loan.id}>\n                <TableCell>{loan.id}</TableCell>\n                <TableCell>\n                    <a onClick={() => goToRequesterInfoView(loan.request.requester.id)}>\n                        {loan.request.requester.id}\n                    </a>\n                </TableCell>\n                <TableCell>{etherToFixed(loan.request.principal)}</TableCell>\n                <TableCell>{etherToFixed(loan.request.repayment)}</TableCell>\n                <TableCell>{formatDays(loan.request.duration)}</TableCell>\n                <TableCell>\n                    <PaymentIcon onClick={() => fundLoan(loan.id)} />\n                </TableCell>\n            </TableRow>\n        );\n    });\n\n    // parseFloat(etherBalance); return floatBalance.toFixed(8)\n    return (\n        <>\n            <Button variant=\"outlined\" color=\"primary\" onClick={goToHomeView}>\n                Home\n            </Button>\n            <div className=\"Table__container\">\n                <TableContainer>\n                    <Table className=\"TablePage__table\" aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Id</TableCell>\n                                <TableCell>Requester</TableCell>\n                                <TableCell>Principal</TableCell>\n                                <TableCell>Repayment</TableCell>\n                                <TableCell>Duration (in days)</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody>{rows}</TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport { utils } from \"ethers\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./RequesterInfo.css\";\n\nexport default function RequesterInfo({ goToHomeView, requesterInfo }) {\n  const etherToFixed = (number) => {\n    const formatted = utils.formatEther(number);\n    return parseFloat(formatted.toString()).toFixed(2);\n  };\n  return (\n    <div className=\"Centered__container\">\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={goToHomeView}>\n          Home\n        </Button>\n\n        <div className=\"Centered__line\">Requester address: {requesterInfo.id}</div>\n        <div className=\"Centered__line\">Amount outstanding: {etherToFixed(requesterInfo.amountOutstanding)}</div>\n        <div className=\"Centered__line\">Amount repayed: {etherToFixed(requesterInfo.amountRepayed)}</div>\n        <div className=\"Centered__line\">Amount requested: {etherToFixed(requesterInfo.amountRequested)}</div>\n        <div className=\"Centered__line\">Amount overdue: {etherToFixed(requesterInfo.amountOverdue)}</div>\n        <div className=\"Centered__line\">\n          <a\n            href={`https://app-kovan.poh.dev/profile/${requesterInfo.id}`}\n            target=\"_blank\"\n          >\n            Proof of humanity\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { utils } from \"ethers\";\n\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport PaymentIcon from '@material-ui/icons/Payment';\n\nimport './Table.css';\n\n\nexport default function RequesterLoanList({ action, goToHomeView, requesterLoans, title }) {\n\n    const rows = requesterLoans.map(loan => {\n        return (\n            <TableRow key={loan.id}>\n                <TableCell>{loan.id}</TableCell>\n                <TableCell>{utils.formatEther(loan.request.principal)}</TableCell>\n                <TableCell>{utils.formatEther(loan.request.repayment)}</TableCell>\n                <TableCell>{utils.formatEther(loan.request.duration)}</TableCell>\n                <TableCell>\n                    <PaymentIcon onClick={() => action(loan.id)} />\n                </TableCell>\n            </TableRow>\n        );\n    });\n\n    return (\n        <>\n            <Button variant=\"outlined\" color=\"primary\" onClick={goToHomeView}>Home</Button>\n            <h1>{title}</h1>\n            <div className=\"Table__container\">\n                <TableContainer>\n                    <Table className=\"TablePage__table\" aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Id</TableCell>\n                                <TableCell>Principal</TableCell>\n                                <TableCell>Repayment</TableCell>\n                                <TableCell>Duration</TableCell>\n                                <TableCell>Pay</TableCell>\n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                            {rows}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n}\n","import axios from 'axios';\n\n\nexport const getLoans = async () => {\n    const query = `{\n        loans {\n          id\n          request {\n            requester {\n                id\n                amountOutstanding\n                amountRequested\n                amountRepayed\n            }\n            principal\n            repayment\n            duration\n          }\n          provision {\n                id\n                timestamp\n          }\n          state\n        }\n      }`;\n    const data = await axios.post('https://api.thegraph.com/subgraphs/name/kronael/floan', { query });\n\n    const loans = data.data.data.loans;\n\n    for(const loan of loans){\n        if(loan.provision){\n            loan.expires = loan.provision.timestamp + Number(loan.request.duration);\n            loan.is_expired = (loan.expires < Date.now() / 1000) && (loan.state == 'PROVIDED' || loan.state != 'DRAWN')\n        }else{\n            loan.expires = null\n            loan.is_expired = false\n        }\n    }\n\n    return loans;\n};\n\nexport const getRequesterInfo = async (requesterId) => {\n    const query = `{requester(id: \"${requesterId}\") {\n        id\n        amountOutstanding\n        amountRepayed\n        amountRequested\n      }}`;\n    const data = await axios.post('https://api.thegraph.com/subgraphs/name/kronael/floan', { query });\n\n    const info = data.data.data.requester;\n    info.amountOverdue = 0;\n\n    const loans = await getLoans();\n\n    for(const loan of loans)\n        if(loan.request.requester.id == requesterId)\n            if(loan.is_expired)\n                info.amountOverdue += loan.request.repayment;\n\n    return info;\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ethers } from \"ethers\";\n\nimport floanAbi from '../abis/floan.json';\nimport erc20Abi from '../abis/erc20.json';\n\nimport CreateLoan from './CreateLoan';\nimport Home from './Home';\nimport OpenLoanList from './OpenLoanList';\nimport RequesterInfo from './RequesterInfo';\nimport RequesterLoanList from './RequesterLoanList';\n\nimport { getLoans, getRequesterInfo } from '../helpers/theGraph';\n\n\nconst VIEWS = {\n    HOME: 'home',\n    CREATE_LOAN: 'create_loan',\n    LIST_LOANS: 'list_loans',\n    REQUESTER_INFO: 'requester_info',\n    REQUESTER_PROVIDED_LOANS_VIEW: 'requester_provided_loans_view',\n    REQUESTER_DRAWN_LOANS_VIEW: 'requester_drawn_loans_view',\n};\n\nexport default class FLoan extends React.PureComponent {\n\n    state = {\n        floanContract: null,  // ethers.js Contract entity for floan\n        daiContract: null,  // ethers.js Contract entity for dai\n        activeView: VIEWS.HOME,\n        loans: [],\n        requesterInfo: null,\n    };\n\n    componentDidMount = async () => {\n        const floanContract = new ethers.Contract(process.env.REACT_APP_FLOAN_ADDRESS, floanAbi, this.props.signer);\n\n        // Get DAI ERC20 address\n        const daiAddress = await floanContract.getTokenAddress();\n        const daiContract = new ethers.Contract(daiAddress, erc20Abi, this.props.signer);\n\n        this.setState({ daiContract, floanContract });\n    }\n\n    // change view\n\n    goToCreateLoanView = () => {\n        this.setState({ activeView: VIEWS.CREATE_LOAN });\n    }\n\n    goToListLoansView = async () => {\n        const loans = await getLoans();\n        console.log(loans);\n        this.setState({ activeView: VIEWS.LIST_LOANS, loans });\n    }\n\n    goToRequesterInfoView = async (requesterId) => {\n        const requesterInfo = await getRequesterInfo(requesterId);\n        console.log(requesterInfo);\n        this.setState({ activeView: VIEWS.REQUESTER_INFO, requesterInfo });\n    }\n\n    goToRequesterProvidedLoansView = async () => {\n        const loans = await getLoans();\n        console.log(loans);\n        this.setState({ activeView: VIEWS.REQUESTER_PROVIDED_LOANS_VIEW, loans });\n    }\n\n    goToRequesterDrawnLoansView = async () => {\n        const loans = await getLoans();\n        console.log(loans);\n        this.setState({ activeView: VIEWS.REQUESTER_DRAWN_LOANS_VIEW, loans });\n    }\n\n    goToHomeView = () => {\n        this.setState({ activeView: VIEWS.HOME });\n    }\n\n    // interactions with the smart contracts\n\n    createLoanOffer = async (principal, repayment, duration) => {\n        const transaction = await this.state.floanContract.requestLoan(principal, repayment, duration);\n        console.log(transaction);\n\n        alert('Loan properly created!');\n        this.goToHomeView();\n    }\n\n    fundLoan = async (loanId) => {\n        // TODO: fix `getCredit` call\n        // const loadPrincipal = await this.state.floanContract.getCredit(loanId).principal;\n        const loadPrincipal = ethers.utils.parseEther('1000');\n\n        const v = await this.state.daiContract.approve(process.env.REACT_APP_FLOAN_ADDRESS, loadPrincipal);\n        console.log(v);\n\n        const w = await this.state.floanContract.provideLoan(loanId);\n        console.log(w);\n\n        alert(`You successfully funded loan: ${loanId}`);\n        this.goToHomeView();\n    }\n\n    drawLoan = async (loanId) => {\n        console.log(await this.state.floanContract.drawLoan(loanId));\n\n        alert(`You received the funds from the load: ${loanId}`);\n        this.goToHomeView();\n    }\n\n    paybackLoan = async (loanId) => {\n        console.log(await this.state.floanContract.paybackLoan(loanId));\n\n        alert(`You successfully payed back loan: ${loanId}`);\n        this.goToHomeView();\n    }\n\n    render() {\n        let activeView;\n        if (this.state.activeView === VIEWS.HOME) {\n            activeView = <Home\n                goToCreateLoanView={this.goToCreateLoanView}\n                goToListLoansView={this.goToListLoansView}\n                goToRequesterProvidedLoansView={this.goToRequesterProvidedLoansView}\n                goToRequesterDrawnLoansView={this.goToRequesterDrawnLoansView}\n                signerAddress={this.props.signerAddress}\n            />;\n        } else if (this.state.activeView === VIEWS.CREATE_LOAN) {\n            activeView = <CreateLoan\n                goToHomeView={this.goToHomeView}\n                createLoanOffer={this.createLoanOffer}\n            />;\n        } else if (this.state.activeView === VIEWS.LIST_LOANS) {\n            activeView = <OpenLoanList\n                goToHomeView={this.goToHomeView}\n                openLoans={this.state.loans.filter(loan => loan.state === 'OPEN')}\n                fundLoan={this.fundLoan}\n                goToRequesterInfoView={this.goToRequesterInfoView}\n            />;\n        } else if (this.state.activeView === VIEWS.REQUESTER_INFO) {\n            activeView = <RequesterInfo\n                goToHomeView={this.goToHomeView}\n                requesterInfo={this.state.requesterInfo}\n            />;\n        } else if (this.state.activeView === VIEWS.REQUESTER_PROVIDED_LOANS_VIEW) {\n            const loans = this.state.loans.filter(loan => (\n                loan.request.requester.id.toLowerCase() === this.props.signerAddress.toLowerCase()\n                && loan.state === 'PROVIDED'\n            ));\n\n            activeView = <RequesterLoanList\n                title={'Provided loans (funded loans, not withdrawn)'}\n                goToHomeView={this.goToHomeView}\n                requesterLoans={loans}\n                action={this.drawLoan}\n            />;\n        } else if (this.state.activeView === VIEWS.REQUESTER_DRAWN_LOANS_VIEW) {\n            const loans = this.state.loans.filter(loan => (\n                loan.request.requester.id.toLowerCase() === this.props.signerAddress.toLowerCase()\n                && loan.state === 'DRAWN'\n            ));\n\n            activeView = <RequesterLoanList\n                title={'Reimburse loans'}\n                goToHomeView={this.goToHomeView}\n                requesterLoans={loans}\n                action={this.paybackLoan}\n            />;\n        }\n\n        return (\n            <div>\n                {activeView}\n            </div>\n        );\n    }\n}\n\nFLoan.propTypes = {\n    provider: PropTypes.object.isRequired,\n    signer: PropTypes.object.isRequired,\n    signerAddress: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { ethers } from \"ethers\";\n\nimport Landing from './Landing';\nimport FLoan from './floan/FLoan';\n\nimport './App.css';\n\n\nexport default class App extends React.PureComponent {\n\n    state = {\n        provider: null,\n        signer: null,\n        signerAddress: null,\n    };\n\n    componentDidMount = async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        this.setState({ provider }, async () => {\n            if (await this._isMetaMaskAccountConnected()) {\n                const signer = this.state.provider.getSigner();\n                const signerAddress = await signer.getAddress();\n                this.setState({ signerAddress, signer });\n            }\n        });\n\n        // later:\n        // 1. show error message if `ethereum.isMetaMask` is false => https://docs.metamask.io/guide/ethereum-provider.html\n        // 2. on account or chain change, reload the page (https://docs.metamask.io/guide/ethereum-provider.html#events)\n        // 3. allow user to disconnect their account\n    }\n\n    _isMetaMaskAccountConnected = async () => {\n        // note: provider.getSigner() always returns a signer, so `listAccounts` is the only way\n        const accounts = await this.state.provider.listAccounts();\n        return accounts.length > 0;\n    }\n\n    connectWallet = async () => {\n        // Command to prompt the user to connect his account with metamask\n        await this.state.provider.send(\"eth_requestAccounts\", []);\n        const signer = this.state.provider.getSigner();\n        const signerAddress = await signer.getAddress();\n\n        this.setState({ signerAddress, signer });\n    }\n\n    render() {\n        return (\n            <div className=\"App__container\">\n                {!this.state.signer ?\n                    <Landing connectWallet={this.connectWallet} /> :\n                    <FLoan {...this.state} />\n                }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}